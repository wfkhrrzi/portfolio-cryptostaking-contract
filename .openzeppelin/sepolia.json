{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x78ab5059e1588a73E4A961285c218aa09bC3D9a9",
    "txHash": "0x00bf8f29ff7d98e9f7e073ff3e9a4abb73f72fb72c02a3c86ec4aefa15eb91cb"
  },
  "proxies": [
    {
      "address": "0x03B3cB8c54824690D210309ef9247a618Bd09305",
      "txHash": "0x1ac7b890094a75406c8a561f5025ec6eb82558575624c577535e10b9b8c8411a",
      "kind": "uups"
    },
    {
      "address": "0xbfB9A9F7Bb114F27a2DC7B76770CEB8445d4562D",
      "txHash": "0x195730c9387b608f21fa168966c38cd052ea3a54c7e251804fc78eaee62336fb",
      "kind": "transparent"
    },
    {
      "address": "0xDdf9cFfe37d9036f9B19E6833562D66b76246ddA",
      "txHash": "0x43c2a5342525caa3cc8e97b33ed02d71d77ea4967679472ebe5f96e88d556e10",
      "kind": "transparent"
    },
    {
      "address": "0x31102D01c26e01a7fcB946Aa637b8207B18bb59D",
      "txHash": "0x5e41dec5e76e0d2c3de3f880850dfd0a9547912c0ed4e799d789fe6b1c168128",
      "kind": "transparent"
    },
    {
      "address": "0x6ef906aC98331A6E6A7cfbbbB2BE245eB1f82ec6",
      "txHash": "0x034495e09e7110c1a530fd479c0b38b6a2ee19c23027bac02736151aa3ff814b",
      "kind": "transparent"
    },
    {
      "address": "0x302004F2F0647FFCf8A7Bf1c756056926BB5cbBa",
      "txHash": "0xe05885b6f286a337ac68995b30fd94399e46a48f8520802ae0b7fe2768b18d21",
      "kind": "transparent"
    },
    {
      "address": "0x0b608851E9556761B1332B17Dfbcf08FD5701C73",
      "txHash": "0x3d54fb9a088aef0dfa0e3061ddf9614761ff85adcca74089bfaee3d8078b5bae",
      "kind": "transparent"
    },
    {
      "address": "0x17932577bcAC0fA48292240f6BB60B94bbd1bc79",
      "txHash": "0x291fb8ac1771fea348f99d78c1c566c042e8139b0f594cf886b7360471838ba7",
      "kind": "transparent"
    },
    {
      "address": "0x1ECf3137Ca747c9ff4Ea00bF1360c5577C28E7fD",
      "txHash": "0xd31722149de5fae137b2f2491fba93867105a2d767128bea2567a26b8d36909e",
      "kind": "transparent"
    },
    {
      "address": "0x06C7321b0d5E3649d8B6aFf4C111BDb501bdA2c5",
      "txHash": "0x9fcb4ab7699a28b15c67640fa4e46c1e6ffe31378395cbc11763d086da4736c2",
      "kind": "transparent"
    },
    {
      "address": "0x49E8c8f810766304E82b4049A43CF6F13B882B87",
      "txHash": "0xe5920383378330934e90e96b74b239de407d84c62716211a47562b2c67794194",
      "kind": "transparent"
    },
    {
      "address": "0x01aCf791fdEE3cfB4EabbaadA7b424C79f2F3fB4",
      "txHash": "0x58e45848d275b6818988e3f31874414a899934b3df562e00598a33895bdd9ce6",
      "kind": "transparent"
    },
    {
      "address": "0xE0F98aAfFB9c014D5C9BFD451DA30C1938a6C79e",
      "txHash": "0x2e8d02ee6d9d010837f0b88e604bbbe351f2d91ec5066025003826ce0fde800a",
      "kind": "transparent"
    }
  ],
  "impls": {
    "240ec3fd5806655948a89f76d9b0a7710586b3b36d4b2c140f4ef177049e703f": {
      "address": "0x4F2E4ef3dD3E987B2A6686BFA02D36e685286a88",
      "txHash": "0xf0b2e57e93360a890caf8c89d90ee3b3dd3472a0c7e5081de2b89c5cdd557dad",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "openzeppelin-contracts-upgradeable-4.8.3\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "openzeppelin-contracts-upgradeable-4.8.3\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "openzeppelin-contracts-upgradeable-4.8.3\\utils\\ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "openzeppelin-contracts-upgradeable-4.8.3\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23675_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "openzeppelin-contracts-upgradeable-4.8.3\\access\\AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "openzeppelin-contracts-upgradeable-4.8.3\\access\\AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "openzeppelin-contracts-upgradeable-4.8.3\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "openzeppelin-contracts-upgradeable-4.8.3\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "openzeppelin-contracts-upgradeable-4.8.3\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "openzeppelin-contracts-upgradeable-4.8.3\\proxy\\utils\\UUPSUpgradeable.sol:111"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "openzeppelin-contracts-upgradeable-4.8.3\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "openzeppelin-contracts-upgradeable-4.8.3\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "openzeppelin-contracts-upgradeable-4.8.3\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "openzeppelin-contracts-upgradeable-4.8.3\\security\\ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "redactedCollection",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IERC721)22967",
            "contract": "REdactedStaking",
            "src": "contracts\\REdacted\\REdactedStaking.sol:48"
          },
          {
            "label": "usdt",
            "offset": 0,
            "slot": "402",
            "type": "t_contract(IERC20)22439",
            "contract": "REdactedStaking",
            "src": "contracts\\REdacted\\REdactedStaking.sol:49"
          },
          {
            "label": "redactedToken",
            "offset": 0,
            "slot": "403",
            "type": "t_contract(IERC20)22439",
            "contract": "REdactedStaking",
            "src": "contracts\\REdacted\\REdactedStaking.sol:50"
          },
          {
            "label": "redactedTokenPerDay",
            "offset": 0,
            "slot": "404",
            "type": "t_uint256",
            "contract": "REdactedStaking",
            "src": "contracts\\REdacted\\REdactedStaking.sol:52"
          },
          {
            "label": "enableREdactedTokenRewardsTime",
            "offset": 0,
            "slot": "405",
            "type": "t_uint256",
            "contract": "REdactedStaking",
            "src": "contracts\\REdacted\\REdactedStaking.sol:53"
          },
          {
            "label": "usdtRewardsEndTime",
            "offset": 0,
            "slot": "406",
            "type": "t_uint256",
            "contract": "REdactedStaking",
            "src": "contracts\\REdacted\\REdactedStaking.sol:54"
          },
          {
            "label": "usdtTierKeys",
            "offset": 0,
            "slot": "407",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "REdactedStaking",
            "src": "contracts\\REdacted\\REdactedStaking.sol:55"
          },
          {
            "label": "stakersArray",
            "offset": 0,
            "slot": "408",
            "type": "t_array(t_address)dyn_storage",
            "contract": "REdactedStaking",
            "src": "contracts\\REdacted\\REdactedStaking.sol:57"
          },
          {
            "label": "usdtTiers",
            "offset": 0,
            "slot": "409",
            "type": "t_mapping(t_uint256,t_struct(USDTTier)8614_storage)",
            "contract": "REdactedStaking",
            "src": "contracts\\REdacted\\REdactedStaking.sol:86"
          },
          {
            "label": "stakers",
            "offset": 0,
            "slot": "410",
            "type": "t_mapping(t_address,t_struct(Staker)8627_storage)",
            "contract": "REdactedStaking",
            "src": "contracts\\REdacted\\REdactedStaking.sol:87"
          },
          {
            "label": "stakerToArrayIndex",
            "offset": 0,
            "slot": "411",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "REdactedStaking",
            "src": "contracts\\REdacted\\REdactedStaking.sol:88"
          },
          {
            "label": "tokenIdToArrayIndex",
            "offset": 0,
            "slot": "412",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "REdactedStaking",
            "src": "contracts\\REdacted\\REdactedStaking.sol:89"
          },
          {
            "label": "stakerAddress",
            "offset": 0,
            "slot": "413",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "REdactedStaking",
            "src": "contracts\\REdacted\\REdactedStaking.sol:90"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)22439": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IERC721)22967": {
            "label": "contract IERC721",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Staker)8627_storage)": {
            "label": "mapping(address => struct REdactedStaking.Staker)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23675_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(USDTTier)8614_storage)": {
            "label": "mapping(uint256 => struct REdactedStaking.USDTTier)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)23675_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Staker)8627_storage": {
            "label": "struct REdactedStaking.Staker",
            "members": [
              {
                "label": "stakedTokenIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timeOfLastUpdate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "unclaimedUSDT",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "unclaimedREdactedToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(USDTTier)8614_storage": {
            "label": "struct REdactedStaking.USDTTier",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "apr",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "4d606e4d0392c3e45edd0cb9952db5d3c2a0bf6fd3e070ef55ec18fd43dbb720": {
      "address": "0x9C1541D0940dED7ea47EE0c1A00BE87B0fb382ec",
      "txHash": "0x27b0d380943fd2848fa549f0bceee34506572fd2a6c67de5a9dd36a213c12671",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "invalidSignature",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "TreasureKey",
            "src": "contracts\\TreasureKey.sol:45"
          },
          {
            "label": "redactedStaking",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IREdactedStaking)11462",
            "contract": "TreasureKey",
            "src": "contracts\\TreasureKey.sol:50"
          },
          {
            "label": "redactedNFT",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IERC721)5252",
            "contract": "TreasureKey",
            "src": "contracts\\TreasureKey.sol:55"
          },
          {
            "label": "claimedNFTIds",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "TreasureKey",
            "src": "contracts\\TreasureKey.sol:60"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(address => mapping(address => mapping(uint256 => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)1441_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSet.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlEnumerableStorage)108_storage": {
            "label": "struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage",
            "members": [
              {
                "label": "_roleMembers",
                "type": "t_mapping(t_bytes32,t_struct(AddressSet)1441_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)1441_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1397_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ERC1155ApprovalByAmountStorage)1502_storage": {
            "label": "struct ERC1155ApprovalByAmountUpgradeable.ERC1155ApprovalByAmountStorage",
            "members": [
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ERC1155Storage)238_storage": {
            "label": "struct ERC1155Upgradeable.ERC1155Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_uri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(ERC1155SupplyStorage)333_storage": {
            "label": "struct ERC1155SupplyUpgradeable.ERC1155SupplyStorage",
            "members": [
              {
                "label": "_totalSupply",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_totalSupplyAll",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(InitializableStorage)146_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)682_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)1397_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_positions",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IERC721)5252": {
            "label": "contract IERC721",
            "numberOfBytes": "20"
          },
          "t_contract(IREdactedStaking)11462": {
            "label": "contract IREdactedStaking",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControlEnumerable": [
            {
              "contract": "AccessControlEnumerableUpgradeable",
              "label": "_roleMembers",
              "type": "t_mapping(t_bytes32,t_struct(AddressSet)1441_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\extensions\\AccessControlEnumerableUpgradeable.sol:19",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:storage.ERC1155ApprovalByAmount": [
            {
              "contract": "ERC1155ApprovalByAmountUpgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))",
              "src": "contracts\\ERC1155ApprovalByAmountUpgradeable.sol:15",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC1155Supply": [
            {
              "contract": "ERC1155SupplyUpgradeable",
              "label": "_totalSupply",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\extensions\\ERC1155SupplyUpgradeable.sol:25",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC1155SupplyUpgradeable",
              "label": "_totalSupplyAll",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\extensions\\ERC1155SupplyUpgradeable.sol:26",
              "offset": 0,
              "slot": "1"
            }
          ],
          "erc7201:openzeppelin.storage.ERC1155": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:29",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "ee5c511997f5d043b10df9abb31dc7a2b6e67c4cda22e05af252d5e4204878f6": {
      "address": "0x226dfD57BD055A78Fe95287B8abf680b0F6a38e4",
      "txHash": "0x9b821fba70104de586f661caae909e972ad58ff3c4ae1bfab50dca0e5b11d869",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "treasureKey",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(ITreasureKey)10419",
            "contract": "TreasureChest",
            "src": "contracts\\TreasureChest.sol:59"
          },
          {
            "label": "rng",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IRandomNumberGen)10371",
            "contract": "TreasureChest",
            "src": "contracts\\TreasureChest.sol:60"
          },
          {
            "label": "usdt",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IERC20)5109",
            "contract": "TreasureChest",
            "src": "contracts\\TreasureChest.sol:62"
          },
          {
            "label": "nftTypes",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_address)dyn_storage",
            "contract": "TreasureChest",
            "src": "contracts\\TreasureChest.sol:68"
          },
          {
            "label": "nftTypesArrIndex",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "TreasureChest",
            "src": "contracts\\TreasureChest.sol:69"
          },
          {
            "label": "totalNftAmount",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "TreasureChest",
            "src": "contracts\\TreasureChest.sol:71"
          },
          {
            "label": "nftAmount",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "TreasureChest",
            "src": "contracts\\TreasureChest.sol:72"
          },
          {
            "label": "nftTokenIds",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "TreasureChest",
            "src": "contracts\\TreasureChest.sol:74"
          },
          {
            "label": "nftTokenIdsArrIndex",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "TreasureChest",
            "src": "contracts\\TreasureChest.sol:75"
          },
          {
            "label": "supplyGoldKeys",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "TreasureChest",
            "src": "contracts\\TreasureChest.sol:80"
          },
          {
            "label": "supplySilverKeys",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256",
            "contract": "TreasureChest",
            "src": "contracts\\TreasureChest.sol:81"
          },
          {
            "label": "randomTrailingZeros",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256",
            "contract": "TreasureChest",
            "src": "contracts\\TreasureChest.sol:88"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)1441_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSet.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlEnumerableStorage)108_storage": {
            "label": "struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage",
            "members": [
              {
                "label": "_roleMembers",
                "type": "t_mapping(t_bytes32,t_struct(AddressSet)1441_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)1441_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1397_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(InitializableStorage)146_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)682_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)1397_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_positions",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)5109": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IRandomNumberGen)10371": {
            "label": "contract IRandomNumberGen",
            "numberOfBytes": "20"
          },
          "t_contract(ITreasureKey)10419": {
            "label": "contract ITreasureKey",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControlEnumerable": [
            {
              "contract": "AccessControlEnumerableUpgradeable",
              "label": "_roleMembers",
              "type": "t_mapping(t_bytes32,t_struct(AddressSet)1441_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\extensions\\AccessControlEnumerableUpgradeable.sol:19",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "83b3aa7028e94c03f34e08e870b46d6935ed1ce29e573de3aa38703f4c96a48a": {
      "address": "0x036250ab4a14646DBDe921e4178D57D1871F26a6",
      "txHash": "0xe706ee23baca37de11f821c5b9ec91e08baa13eb99e10dea521b78a6f59181f8",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_nextTokenId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "TestNFT",
            "src": "contracts\\REdacted\\TestNFT.sol:12"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)584_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)416_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)146_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "b6c771f4224c505439945a2a4182251f644f73799464493c110fd3fbb1ce7359": {
      "address": "0x6e2f3843148BDeB80e0d7a498cE9917f8e9f3Ba9",
      "txHash": "0x5071de9676c8a979cbc514d22567f15522cf4020a1c81b47bd8cedd5d75d090f",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "openzeppelin-contracts-upgradeable-4.8.3\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "openzeppelin-contracts-upgradeable-4.8.3\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "openzeppelin-contracts-upgradeable-4.8.3\\utils\\ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "openzeppelin-contracts-upgradeable-4.8.3\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)10985_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "openzeppelin-contracts-upgradeable-4.8.3\\access\\AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "openzeppelin-contracts-upgradeable-4.8.3\\access\\AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "openzeppelin-contracts-upgradeable-4.8.3\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "openzeppelin-contracts-upgradeable-4.8.3\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "openzeppelin-contracts-upgradeable-4.8.3\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "openzeppelin-contracts-upgradeable-4.8.3\\proxy\\utils\\UUPSUpgradeable.sol:111"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "openzeppelin-contracts-upgradeable-4.8.3\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "openzeppelin-contracts-upgradeable-4.8.3\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "openzeppelin-contracts-upgradeable-4.8.3\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "openzeppelin-contracts-upgradeable-4.8.3\\security\\ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "redactedCollection",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IERC721)10307",
            "contract": "REdactedStaking",
            "src": "contracts\\REdacted\\REdactedStaking.sol:48"
          },
          {
            "label": "usdt",
            "offset": 0,
            "slot": "402",
            "type": "t_contract(IERC20)9779",
            "contract": "REdactedStaking",
            "src": "contracts\\REdacted\\REdactedStaking.sol:49"
          },
          {
            "label": "redactedToken",
            "offset": 0,
            "slot": "403",
            "type": "t_contract(IERC20)9779",
            "contract": "REdactedStaking",
            "src": "contracts\\REdacted\\REdactedStaking.sol:50"
          },
          {
            "label": "redactedTokenPerDay",
            "offset": 0,
            "slot": "404",
            "type": "t_uint256",
            "contract": "REdactedStaking",
            "src": "contracts\\REdacted\\REdactedStaking.sol:52"
          },
          {
            "label": "enableREdactedTokenRewardsTime",
            "offset": 0,
            "slot": "405",
            "type": "t_uint256",
            "contract": "REdactedStaking",
            "src": "contracts\\REdacted\\REdactedStaking.sol:53"
          },
          {
            "label": "usdtRewardsEndTime",
            "offset": 0,
            "slot": "406",
            "type": "t_uint256",
            "contract": "REdactedStaking",
            "src": "contracts\\REdacted\\REdactedStaking.sol:54"
          },
          {
            "label": "usdtTierKeys",
            "offset": 0,
            "slot": "407",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "REdactedStaking",
            "src": "contracts\\REdacted\\REdactedStaking.sol:55"
          },
          {
            "label": "stakersArray",
            "offset": 0,
            "slot": "408",
            "type": "t_array(t_address)dyn_storage",
            "contract": "REdactedStaking",
            "src": "contracts\\REdacted\\REdactedStaking.sol:57"
          },
          {
            "label": "usdtTiers",
            "offset": 0,
            "slot": "409",
            "type": "t_mapping(t_uint256,t_struct(USDTTier)70_storage)",
            "contract": "REdactedStaking",
            "src": "contracts\\REdacted\\REdactedStaking.sol:86"
          },
          {
            "label": "stakers",
            "offset": 0,
            "slot": "410",
            "type": "t_mapping(t_address,t_struct(Staker)83_storage)",
            "contract": "REdactedStaking",
            "src": "contracts\\REdacted\\REdactedStaking.sol:87"
          },
          {
            "label": "stakerToArrayIndex",
            "offset": 0,
            "slot": "411",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "REdactedStaking",
            "src": "contracts\\REdacted\\REdactedStaking.sol:88"
          },
          {
            "label": "tokenIdToArrayIndex",
            "offset": 0,
            "slot": "412",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "REdactedStaking",
            "src": "contracts\\REdacted\\REdactedStaking.sol:89"
          },
          {
            "label": "stakerAddress",
            "offset": 0,
            "slot": "413",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "REdactedStaking",
            "src": "contracts\\REdacted\\REdactedStaking.sol:90"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)9779": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IERC721)10307": {
            "label": "contract IERC721",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Staker)83_storage)": {
            "label": "mapping(address => struct REdactedStaking.Staker)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)10985_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(USDTTier)70_storage)": {
            "label": "mapping(uint256 => struct REdactedStaking.USDTTier)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)10985_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Staker)83_storage": {
            "label": "struct REdactedStaking.Staker",
            "members": [
              {
                "label": "stakedTokenIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timeOfLastUpdate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "unclaimedUSDT",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "unclaimedREdactedToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(USDTTier)70_storage": {
            "label": "struct REdactedStaking.USDTTier",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "apr",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "17a03a225647ce1e85c769a5f8a1caa19d26cfeccd4bf3b087b53ea41823c52e": {
      "address": "0x4e07CeB9a5ec27c5d1950ba336534f6C415E1Cc7",
      "txHash": "0xe0999e268093e922b7749211a93fbabd36f7a020ba93f699e765175f7af4b6b3",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "openzeppelin-contracts-upgradeable-4.8.3\\proxy\\utils\\Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "openzeppelin-contracts-upgradeable-4.8.3\\proxy\\utils\\Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "openzeppelin-contracts-upgradeable-4.8.3\\utils\\ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "openzeppelin-contracts-upgradeable-4.8.3\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)11000_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "openzeppelin-contracts-upgradeable-4.8.3\\access\\AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "openzeppelin-contracts-upgradeable-4.8.3\\access\\AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "openzeppelin-contracts-upgradeable-4.8.3\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "openzeppelin-contracts-upgradeable-4.8.3\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "openzeppelin-contracts-upgradeable-4.8.3\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "openzeppelin-contracts-upgradeable-4.8.3\\proxy\\utils\\UUPSUpgradeable.sol:111"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "openzeppelin-contracts-upgradeable-4.8.3\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "openzeppelin-contracts-upgradeable-4.8.3\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "openzeppelin-contracts-upgradeable-4.8.3\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "openzeppelin-contracts-upgradeable-4.8.3\\security\\ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "redactedCollection",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IERC721)10322",
            "contract": "REdactedStaking",
            "src": "contracts\\REdacted\\REdactedStaking.sol:48"
          },
          {
            "label": "usdt",
            "offset": 0,
            "slot": "402",
            "type": "t_contract(IERC20)9794",
            "contract": "REdactedStaking",
            "src": "contracts\\REdacted\\REdactedStaking.sol:49"
          },
          {
            "label": "redactedToken",
            "offset": 0,
            "slot": "403",
            "type": "t_contract(IERC20)9794",
            "contract": "REdactedStaking",
            "src": "contracts\\REdacted\\REdactedStaking.sol:50"
          },
          {
            "label": "redactedTokenPerDay",
            "offset": 0,
            "slot": "404",
            "type": "t_uint256",
            "contract": "REdactedStaking",
            "src": "contracts\\REdacted\\REdactedStaking.sol:52"
          },
          {
            "label": "enableREdactedTokenRewardsTime",
            "offset": 0,
            "slot": "405",
            "type": "t_uint256",
            "contract": "REdactedStaking",
            "src": "contracts\\REdacted\\REdactedStaking.sol:53"
          },
          {
            "label": "usdtRewardsEndTime",
            "offset": 0,
            "slot": "406",
            "type": "t_uint256",
            "contract": "REdactedStaking",
            "src": "contracts\\REdacted\\REdactedStaking.sol:54"
          },
          {
            "label": "usdtTierKeys",
            "offset": 0,
            "slot": "407",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "REdactedStaking",
            "src": "contracts\\REdacted\\REdactedStaking.sol:55"
          },
          {
            "label": "stakersArray",
            "offset": 0,
            "slot": "408",
            "type": "t_array(t_address)dyn_storage",
            "contract": "REdactedStaking",
            "src": "contracts\\REdacted\\REdactedStaking.sol:57"
          },
          {
            "label": "usdtTiers",
            "offset": 0,
            "slot": "409",
            "type": "t_mapping(t_uint256,t_struct(USDTTier)70_storage)",
            "contract": "REdactedStaking",
            "src": "contracts\\REdacted\\REdactedStaking.sol:86"
          },
          {
            "label": "stakers",
            "offset": 0,
            "slot": "410",
            "type": "t_mapping(t_address,t_struct(Staker)83_storage)",
            "contract": "REdactedStaking",
            "src": "contracts\\REdacted\\REdactedStaking.sol:87"
          },
          {
            "label": "stakerToArrayIndex",
            "offset": 0,
            "slot": "411",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "REdactedStaking",
            "src": "contracts\\REdacted\\REdactedStaking.sol:88"
          },
          {
            "label": "tokenIdToArrayIndex",
            "offset": 0,
            "slot": "412",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "REdactedStaking",
            "src": "contracts\\REdacted\\REdactedStaking.sol:89"
          },
          {
            "label": "stakerAddress",
            "offset": 0,
            "slot": "413",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "REdactedStaking",
            "src": "contracts\\REdacted\\REdactedStaking.sol:90"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)9794": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IERC721)10322": {
            "label": "contract IERC721",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Staker)83_storage)": {
            "label": "mapping(address => struct REdactedStaking.Staker)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)11000_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(USDTTier)70_storage)": {
            "label": "mapping(uint256 => struct REdactedStaking.USDTTier)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)11000_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Staker)83_storage": {
            "label": "struct REdactedStaking.Staker",
            "members": [
              {
                "label": "stakedTokenIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timeOfLastUpdate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "unclaimedUSDT",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "unclaimedREdactedToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(USDTTier)70_storage": {
            "label": "struct REdactedStaking.USDTTier",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "apr",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    }
  }
}
